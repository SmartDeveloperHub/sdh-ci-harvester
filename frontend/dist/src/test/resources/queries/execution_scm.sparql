#
# #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#   This file is part of the Smart Developer Hub Project:
#     http://www.smartdeveloperhub.org/
#
#   Center for Open Middleware
#     http://www.centeropenmiddleware.com/
# #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#   Copyright (C) 2015 Center for Open Middleware.
# #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#             http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#   Artifact    : org.smartdeveloperhub.harvesters.ci.frontend:ci-frontend-dist:0.2.0
#   Bundle      : ci-frontend-dist-0.2.0.war
# #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#

PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX ldp: <http://www.w3.org/ns/ldp#>
PREFIX oslc_auto: <http://open-services.net/ns/auto#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX scm: <http://www.smartdeveloperhub.org/vocabulary/scm#>
PREFIX ci: <http://www.smartdeveloperhub.org/vocabulary/ci#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT
  ?repositoryLocation ?branchId ?commitId
  ?branchResource ?commitResource
WHERE {
  ?execution a ci:Execution ;
    scm:location ?repositoryLocation ;
    ci:branchId ?branchId ;
    ci:commitId ?commitId ;
    ci:forBranch ?branchResource ;
    ci:forCommit ?commitResource .
  FILTER (
    isLiteral(?repositoryLocation) && (datatype(?repositoryLocation) = xsd:anyURI) &&
    isLiteral(?branchId) && (datatype(?branchId) = xsd:string) &&
    isLiteral(?commitId) && (datatype(?commitId) = xsd:string) &&
    isURI(?branchResource) &&
    isURI(?commitResource)
  )
}
